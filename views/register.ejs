<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" rel="stylesheet">
        <script crossorigin="anonymous" src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"></script>
        <link href="/static/favicon.ico" rel="icon">
        <link href="/styles.css" rel="stylesheet">
        <title>Register</title>
    </head>
<body>
    <%- include('./partials/header.ejs') %>
    
<h1>Registration Form</h1>
<form class="registration container mt-5 p-4 border rounded" action="/register" method="POST">
    
    <div class="mb-3">
        
        <label class="form-label">Select User Type</label>
        <div class="form-check">
            <input class="form-check-input" type="radio" id="student" name="user_type" value="student" required>
            <label class="form-check-label" for="student">Student</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" id="admin" name="user_type" value="administrator" required>
            <label class="form-check-label" for="admin">Admin</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" id="guardian" name="user_type" value="guardian" required>
            <label class="form-check-label" for="guardian">Guardian</label>
        </div>
    </div>
    

    <div class="mb-3">
        <label for="fullName" class="form-label">Create New User</label>
        <input type="text" class="form-control" id="fullName" name="fullName" placeholder="Full Name" required>
    </div>

    <div class="mb-3">
        <label for="school_name" class="form-label">Full School Name</label>
        <input type="text" class="form-control" id="school_name" name="school_name" placeholder="School" required>
    </div>
    <div class="mb-3">
        <label for="phone_number" class="form-label">Phone Number</label>
        <input type="number" class="form-control" id="phone_number" name="phone_number" placeholder="Phone Number" required>
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="email" placeholder="(school) Email">
    </div>

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <input type="text" class="form-control" id="username" name="username" placeholder="User Name" onInput="checkUsername(this.value)" required> <!---->
        <small id="usernameFeedback"></small>
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="text" class="form-control" id="password" name="password" placeholder="Password" required>
        <small id="passwordFeedback"></small>
    </div>

    
    <!--STUDENT SELECTION-->
    <div id="studentFields" class="hidden specific">
        <label for="student_id">Student ID:</label>
        <input type="number" id="student_id" name="student_id"><br>
    </div>

    <!--GUARDIAN SELECTION-->
    <div id="guardianFields" class="hidden specific">

        <label for="affiliated_student_name">Your Student:</label>
        <input type="text" id="affiliated_student_name" name="affiliated_student_name"><br>

        <label for="affiliation">Affiliation:</label>
        <input type="text" id="affiliation" name="affiliation"><br>

    </div>
    <!--ADMINISTRATOR SELECTION-->
    <div id="administratorFields" class="hidden specific">
        <label for="position">Position:</label>
        <input type="text" id="position" name="position"><br>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>


    <%- include('./partials/footer.ejs') %>

    <script>
        let doesUsernameExist = false;
        
        //checks if username exists as user types
        async function checkUsername(username) {
            const feedback = document.getElementById('usernameFeedback');
            if (!username) {
                feedback.textContent = '';
                return;
            }
            try {
                const usernameCheck = await fetch(`/check-username?username=${encodeURIComponent(username)}`);
                doesUsernameExist = await usernameCheck.json();
                //updates feedback for user to see
                if (doesUsernameExist.exists) {
                    feedback.textContent = 'Username is already taken';
                    feedback.style.color = 'red';
                } else {
                    feedback.textContent = 'Username is available';
                    feedback.style.color = 'green';
                }
            } catch (err) {
                feedback.textContent = 'Error checking username';
                feedback.style.color = 'red';
                doesUsernameExist = false;
                console.error(err);
            }
        }


        document.querySelectorAll('input[name="user_type"]').forEach(radio => {
            radio.addEventListener('change', function() {
                // Hide all specific fields
                document.getElementById('studentFields').classList.add('hidden');
                document.getElementById('guardianFields').classList.add('hidden');
                document.getElementById('administratorFields').classList.add('hidden');

                // Show relevant fields based on user type
                if (this.value === 'student') {
                    document.getElementById('studentFields').classList.remove('hidden');
                } else if (this.value === 'guardian') {
                    document.getElementById('guardianFields').classList.remove('hidden');
                } else if (this.value === 'administrator') {
                    document.getElementById('administratorFields').classList.remove('hidden');
                }
            });
        });
        //prevents default to check values first
        const form = document.querySelector('form.registration');
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const form = event.target;
            
            const formData = new FormData(form);
            const data = {};
            formData.forEach((value, key) => {
                data[key] = value;
            });
            //checks password length
            if (data.password.length < 8) {
                alert("Password must be at least 8 characters long.");
                return;
            }

            //checks if username available
            try {
                await checkUsername(data.username);
                if(doesUsernameExist.exists) {
                    alert("Username is already taken.");
                    return;
                }
                //posts data to register user
                const res = await fetch('/register', {
                    method: 'POST',
                    body: JSON.stringify(data),
                    headers: { 'Content-Type': 'application/json' }
                })

                const response = await res.json();

                if (res.ok) {
                    alert(`${data.user_type} has registered!`);
                    window.location.href = '/login';  // Redirect to the login page
                } else {
                    alert(response.message || 'Registration failed. Please try again.');
                }

            }
            catch (err) {
                console.error(err);
            }
        })
    </script>
    
</body>
</html>